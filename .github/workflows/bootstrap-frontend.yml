name: bootstrap-frontend

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/bootstrap-frontend.yml"

permissions:
  contents: write

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Scaffold Vue app if missing
        run: |
          if [ ! -d admin-frontend ]; then
            npm create vite@latest admin-frontend -- --template vue
          fi

      - name: Install deps
        working-directory: admin-frontend
        run: |
          npm i
          npm i axios element-plus vue-router@4

      - name: Write base files (router + http util + layout + pages)
        working-directory: admin-frontend
        run: |
          # vite proxy（把 /api 代理到本地后端 http://localhost:8000）
          cat > vite.config.js <<'JS'
          import { defineConfig } from 'vite'
          import vue from '@vitejs/plugin-vue'
          export default defineConfig({
            plugins: [vue()],
            server: {
              port: 5173,
              proxy: {
                '/api': 'http://localhost:8000'
              }
            }
          })
          JS

          # main.js
          cat > src/main.js <<'JS'
          import { createApp } from 'vue'
          import App from './App.vue'
          import router from './router'
          import ElementPlus from 'element-plus'
          import 'element-plus/dist/index.css'
          const app = createApp(App)
          app.use(ElementPlus)
          app.use(router)
          app.mount('#app')
          JS

          # App.vue + 简单菜单
          cat > src/App.vue <<'VUE'
          <template>
            <div class="layout">
              <aside class="sider">
                <el-menu router default-active="/demo/orders">
                  <el-sub-menu index="demo">
                    <template #title>Demo</template>
                    <el-menu-item index="/demo/orders">订单演示</el-menu-item>
                    <el-menu-item index="/demo/jobs">任务索引</el-menu-item>
                  </el-sub-menu>
                </el-menu>
              </aside>
              <main class="main"><router-view/></main>
            </div>
          </template>
          <style>
          .layout{display:flex;height:100vh}
          .sider{width:220px;border-right:1px solid #eee;padding:6px 0}
          .main{flex:1;padding:16px;overflow:auto}
          </style>
          VUE

          # router
          mkdir -p src/router
          cat > src/router/index.js <<'JS'
          import { createRouter, createWebHistory } from 'vue-router'
          import DemoOrders from '../pages/demo/DemoOrders.vue'
          import JobIndex from '../pages/demo/JobIndex.vue'
          const routes = [
            { path: '/', redirect:'/demo/orders' },
            { path: '/demo/orders', component: DemoOrders },
            { path: '/demo/jobs', component: JobIndex },
          ]
          export default createRouter({ history: createWebHistory(), routes })
          JS

          # http util
          mkdir -p src/utils
          cat > src/utils/http.js <<'JS'
          import axios from 'axios'
          const ins = axios.create({ baseURL: '/api' })
          // 这里如需多租户，可在请求头加 X-Tenant
          ins.interceptors.request.use(cfg => {
            // cfg.headers['X-Tenant'] = '1'
            return cfg
          })
          export default ins
          JS

          # pages
          mkdir -p src/pages/demo

          cat > src/pages/demo/DemoOrders.vue <<'VUE'
          <template>
            <div>
              <el-card class="mb">
                <template #header>下单演示</template>
                <el-form :inline="true" :model="form">
                  <el-form-item label="交易对"><el-input v-model="form.symbol" placeholder="BTC/USDT"/></el-form-item>
                  <el-form-item label="方向">
                    <el-select v-model="form.side" style="width:120px">
                      <el-option label="买" value="buy"/><el-option label="卖" value="sell"/>
                    </el-select>
                  </el-form-item>
                  <el-form-item label="数量"><el-input-number v-model="form.amount" :min="0" :step="1"/></el-form-item>
                  <el-form-item label="价格"><el-input-number v-model="form.price" :min="0" :step="0.01"/></el-form-item>
                  <el-form-item><el-button type="primary" @click="place">创建订单</el-button></el-form-item>
                </el-form>
              </el-card>

              <el-table :data="list" height="calc(100vh - 380px)" border>
                <el-table-column prop="id" label="ID" width="80"/>
                <el-table-column prop="partner" label="渠道" width="120"/>
                <el-table-column prop="symbol" label="交易对" width="140"/>
                <el-table-column prop="side" label="方向" width="100"/>
                <el-table-column prop="amount" label="数量" width="120"/>
                <el-table-column prop="price" label="价格" width="120"/>
                <el-table-column prop="status" label="状态" width="120"/>
                <el-table-column prop="created_at" label="创建时间" width="180"/>
                <el-table-column label="操作" width="200">
                  <template #default="{row}">
                    <el-button size="small" @click="query(row.id)">主动查询</el-button>
                  </template>
                </el-table-column>
              </el-table>
              <div class="pager">
                <el-pagination background layout="prev, pager, next"
                  :total="total" :page-size="perPage" @current-change="pageChange"/>
              </div>
            </div>
          </template>
          <script setup>
          import { ref } from 'vue'
          import axios from '../../utils/http'
          import { ElMessage } from 'element-plus'
          const form = ref({ symbol:'BTC/USDT', side:'buy', amount:1, price:100 })
          const list = ref([]); const total = ref(0); const page = ref(1); const perPage = ref(15)
          async function load(){ const { data } = await axios.get('/admin/demo/orders', { params:{ page: page.value, per_page: perPage.value } }); list.value=data.data; total.value=data.total }
          async function place(){ const { data } = await axios.post('/admin/demo/orders', form.value); ElMessage.success('已创建，job='+data.data.job_id); load() }
          async function query(id){ await axios.post(`/admin/demo/orders/${id}/query`); ElMessage.success('已触发查询'); }
          function pageChange(p){ page.value=p; load() }
          load()
          </script>
          <style scoped>
          .mb{ margin-bottom:12px }
          .pager{text-align:right;margin-top:10px}
          </style>
          VUE

          cat > src/pages/demo/JobIndex.vue <<'VUE'
          <template>
            <div>
              <div class="toolbar">
                <el-input v-model="form.partner" placeholder="partner" style="width:160px"/>
                <el-input v-model="form.type" placeholder="type" style="width:160px"/>
                <el-select v-model="form.status" placeholder="status" style="width:140px" clearable>
                  <el-option label="queued" value="queued"/><el-option label="done" value="done"/><el-option label="failed" value="failed"/>
                </el-select>
                <el-button type="primary" @click="load">查询</el-button>
              </div>
              <el-table :data="list" height="calc(100vh - 240px)" border>
                <el-table-column prop="id" label="ID" width="80"/>
                <el-table-column prop="job_id" label="JobID" width="260"/>
                <el-table-column prop="partner" label="Partner" width="140"/>
                <el-table-column prop="type" label="Type" width="160"/>
                <el-table-column prop="status" label="状态" width="120"/>
                <el-table-column prop="attempts" label="尝试" width="100"/>
                <el-table-column prop="last_error" label="最后错误"/>
                <el-table-column prop="created_at" label="创建时间" width="180"/>
              </el-table>
              <div class="pager">
                <el-pagination background layout="prev, pager, next"
                  :total="total" :page-size="perPage" @current-change="pageChange"/>
              </div>
            </div>
          </template>
          <script setup>
          import { ref } from 'vue'
          import axios from '../../utils/http'
          const list = ref([]); const total = ref(0); const page = ref(1); const perPage = ref(20)
          const form = ref({ partner:'', type:'', status:'' })
          async function load(){ const { data } = await axios.get('/admin/jobs/index', { params:{ page: page.value, per_page: perPage.value, ...form.value } }); list.value=data.data; total.value=data.total }
          function pageChange(p){ page.value=p; load() }
          load()
          </script>
          <style scoped>
          .toolbar{display:flex;gap:8px;margin-bottom:12px;align-items:center;flex-wrap:wrap}
          .pager{text-align:right;margin-top:10px}
          </style>
          VUE

      - name: Commit frontend back
        run: |
          git config user.name "gh-actions"
          git config user.email "actions@github.com"
          git add -A
          git commit -m "chore(frontend): scaffold admin-frontend with Demo pages" || echo "No changes"
          git push
