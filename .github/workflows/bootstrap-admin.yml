name: bootstrap-admin

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/bootstrap-admin.yml"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer:v2
          coverage: none

      - name: Create Laravel app if missing
        run: |
          if [ ! -d backend ]; then
            composer create-project laravel/laravel backend --no-interaction
          fi

      - name: Require predis
        working-directory: backend
        run: composer require predis/predis:^2.0 --no-interaction

      # === 省略：这里保持你之前那堆“写入 PHP 代码（Go Bridge + Demo）”的步骤 ===
      # 你已经有了那份，我不在这儿重复粘贴。
      # 如果没有，请回看我上条消息中的 bootstrap-admin.yml 大段代码，直接合并。

      - name: Write SQL dump (schema + seed)
        working-directory: backend
        run: |
          mkdir -p database/sql
          cat > database/sql/bootstrap.sql <<'SQL'
          -- MySQL 8+ 建表：Go Bridge + Demo 所需
          CREATE TABLE IF NOT EXISTS partner_configs (
            id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(50) UNIQUE NOT NULL,
            base_url VARCHAR(255) NOT NULL,
            api_key VARCHAR(255) NULL,
            api_secret VARCHAR(255) NULL,
            callback_secret VARCHAR(255) NULL,
            rate_per_sec INT DEFAULT 100,
            per_host_rate INT DEFAULT 50,
            timeout_ms INT DEFAULT 5000,
            enabled TINYINT(1) DEFAULT 1,
            created_at TIMESTAMP NULL,
            updated_at TIMESTAMP NULL
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

          CREATE TABLE IF NOT EXISTS http_job_index (
            id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
            job_id CHAR(36) UNIQUE NOT NULL,
            type VARCHAR(32) NOT NULL,
            order_id BIGINT UNSIGNED NULL,
            partner VARCHAR(50) NOT NULL,
            status VARCHAR(16) DEFAULT 'queued',
            attempts INT DEFAULT 0,
            last_error TEXT NULL,
            created_at TIMESTAMP NULL,
            updated_at TIMESTAMP NULL,
            INDEX idx_job_type(type),
            INDEX idx_job_order(order_id),
            INDEX idx_job_partner(partner)
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

          CREATE TABLE IF NOT EXISTS demo_orders (
            id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
            tenant_id BIGINT UNSIGNED NOT NULL,
            partner VARCHAR(50) NOT NULL,
            symbol VARCHAR(50) NOT NULL,
            side VARCHAR(10) NOT NULL,
            amount DECIMAL(18,8) NOT NULL,
            price DECIMAL(18,8) NOT NULL,
            status VARCHAR(32) DEFAULT 'pending',
            out_order_id VARCHAR(64) NULL,
            created_at TIMESTAMP NULL,
            updated_at TIMESTAMP NULL,
            INDEX idx_demo_partner(partner),
            INDEX idx_demo_status(status)
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

          CREATE TABLE IF NOT EXISTS order_events (
            id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
            order_id BIGINT UNSIGNED NOT NULL,
            event VARCHAR(32) NOT NULL,
            payload JSON NULL,
            created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            INDEX idx_event_order(order_id)
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

          -- 基础种子
          INSERT INTO partner_configs (name, base_url, api_key, api_secret, callback_secret, rate_per_sec, per_host_rate, timeout_ms, enabled, created_at, updated_at)
          VALUES
          ('partnerA','https://example-partnerA.test','demo-key','demo-secret','partner-callback-secret',100,50,5000,1,NOW(),NOW())
          ON DUPLICATE KEY UPDATE base_url=VALUES(base_url), api_key=VALUES(api_key), api_secret=VALUES(api_secret),
            callback_secret=VALUES(callback_secret), rate_per_sec=VALUES(rate_per_sec), per_host_rate=VALUES(per_host_rate),
            timeout_ms=VALUES(timeout_ms), enabled=VALUES(enabled), updated_at=NOW();
          SQL

      - name: Commit backend code back
        run: |
          git config user.name "gh-actions"
          git config user.email "actions@github.com"
          git add -A
          git commit -m "chore(backend): add SQL dump and Go Bridge code" || echo "No changes"
          git push
